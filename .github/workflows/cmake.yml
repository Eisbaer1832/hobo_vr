name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Clone repo
      uses: actions/checkout@v2
      
    - name: Clone submodules
      run: git submodule init && git submodule update

    # Configure CMake projects
    - name: Configure Driver CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake driver -B ${{github.workspace}}/driver_build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Configure Poser Cmake
      run: cmake bindings/cpp/examples/uduTest -B ${{github.workspace}}/poser_build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # Builds targets
    - name: Build Driver
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/driver_build --config ${{env.BUILD_TYPE}}

    - name: Build Poser
      run: cmake --build ${{github.workspace}}/poser_build --config ${{env.BUILD_TYPE}}

    # Install targets
    - name: Install Driver
      # Install the built driver into it's directory
      run: cmake --install ${{github.workspace}}/driver_build

    - name: Install Poser
      run: cmake --install ${{github.workspace}}/poser_build

    # Upload build artifacts
    - name: Upload Driver Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: hobovr-build-${{matrix.os}}
        path: |
          hobovr

    - name: Upload poser Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-poser-${{matrix.os}}
        # could have different extensions depending on the platform
        path: bindings/cpp/examples/uduTest/output/test_poser
